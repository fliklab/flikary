---
export interface Props {
  activeNav?: "blog" | "archives" | "tags" | "resume"| "about" | "search";
}
import LensEffects from "./LensEffects.astro";
import DesktopNav from "./DesktopNav.astro";
import MinimizedNav from "./MinimizedNav.astro";
import "./navigation.css";

const { activeNav } = Astro.props;

---

<header id="main-header" class="fixed left-0 right-0 top-0 z-50">
  <LensEffects/>
  <DesktopNav activeNav={activeNav} />
  <MinimizedNav activeNav={activeNav} />
</header>

<script>
  // 전역 변수로 이벤트 리스너 참조 저장
  let scrollHandler: ((event: Event) => void) | null = null;
  
  function initializeNavigation() {
    // 네비게이션 요소 (데스크톱과 모바일)
    const nav = document.getElementById('floating-nav');
    const navMobile = document.getElementById('floating-nav-mobile');
    const navLabel = document.getElementById('nav-label');
    
    // 기존 스크롤 이벤트 리스너 제거 (중복 방지)
    if (scrollHandler) {
      window.removeEventListener('scroll', scrollHandler);
    }
    
    // 스크롤 상태 관리
    let lastScrollY = window.scrollY;
    let scrollDirection = 'up';
    let ticking = false;
    
    // 테마 토글 기능
    const themeBtn = document.getElementById('theme-btn');
    const themeBtnMobile = document.getElementById('theme-btn-mobile');
    
    function toggleTheme() {
      const currentTheme = document.documentElement.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
    }
    
    // 부드러운 스크롤 효과
    function updateNavOnScroll() {
      const currentScrollY = window.scrollY;
      const scrollDelta = currentScrollY - lastScrollY;
      
      // 스크롤 방향 감지
      if (Math.abs(scrollDelta) > 5) { // 최소 움직임 임계값
        scrollDirection = scrollDelta > 0 ? 'down' : 'up';
      }
      
      // 스크롤 위치에 따른 상태 분류
      let scrollState = 'top';
      if (currentScrollY > 50) scrollState = 'scrolled';
      if (currentScrollY > 200) scrollState = 'deep';

      // 데스크톱 네비게이션 처리
      if (nav) {
        nav.setAttribute('data-scroll-state', scrollState);
        nav.setAttribute('data-scroll-direction', scrollDirection);
        
        // CSS 커스텀 프로퍼티로 스크롤 정보 전달
        nav.style.setProperty('--scroll-y', `${currentScrollY}px`);
        nav.style.setProperty('--scroll-progress', `${Math.min(currentScrollY / 300, 1)}`);
        
        // 동적 스타일 적용 (데스크톱)
        switch(scrollState) {
          case 'top':
            // 초기 확장 상태 - 더 크고 여유로운 형태
            nav.style.transform = 'translateX(-50%) scale(1.05)';
            nav.style.top = '1rem'; // top-4
            nav.style.backdropFilter = 'blur(2px)';
            nav.style.padding = '1rem 2rem'; // px-8 py-4
            nav.style.gap = '1.5rem'; // gap-6
            nav.style.opacity = '0';
            break;
            
          case 'scrolled':
            // 중간 상태 - 일반 크기
            nav.style.transform = 'translateX(-50%) scale(1)';
            nav.style.top = scrollDirection === 'down' ? '0.5rem' : '1rem';
            nav.style.backdropFilter = 'blur(8px)';
            nav.style.padding = '0.75rem 1.5rem'; // px-6 py-3
            nav.style.gap = '1rem'; // gap-4
            nav.style.backgroundColor = 'rgba(255, 255, 255, 0.0)';
            break;
            
          case 'deep':
            // 최소 상태 - 컴팩트한 형태
            nav.style.transform = 'translateX(-50%) scale(0.9)';
            nav.style.top = scrollDirection === 'down' ? '0.25rem' : '0.75rem';
            nav.style.backdropFilter = 'blur(16px)';
            nav.style.padding = '0.5rem 1rem'; // 더 작은 패딩
            nav.style.gap = '0.75rem'; // 더 작은 간격
            nav.style.backgroundColor = 'rgba(255, 255, 255, 0.3)';
            break;
        }
        
        // 스크롤 방향에 따른 투명도 조절 (깊이 스크롤 시)
        if (currentScrollY > 600) {
          if (scrollDirection === 'down') {
            nav.style.opacity = '0.8';
          } else {
            nav.style.opacity = '1';
          }
        } else {
          nav.style.opacity = '1';
        }
      }

      // 모바일 네비게이션 처리
      if (navMobile) {
        navMobile.setAttribute('data-scroll-state', scrollState);
        navMobile.setAttribute('data-scroll-direction', scrollDirection);
        
        // CSS 커스텀 프로퍼티로 스크롤 정보 전달
        navMobile.style.setProperty('--scroll-y', `${currentScrollY}px`);
        navMobile.style.setProperty('--scroll-progress', `${Math.min(currentScrollY / 300, 1)}`);
        
        // 동적 스타일 적용 (모바일)
        switch(scrollState) {
          case 'top':
            // 초기 확장 상태 - 모바일용
            navMobile.style.transform = 'translateX(-50%) scale(0.8)';
            navMobile.style.top = '0.5rem';
            navMobile.style.backdropFilter = 'blur(2px)';
            navMobile.style.padding = '0.5rem 1rem';
            navMobile.style.gap = '0.5rem';
            break;
            
          case 'scrolled':
            // 중간 상태 - 모바일용
            navMobile.style.transform = 'translateX(-50%) scale(0.7)';
            navMobile.style.top = scrollDirection === 'down' ? '0.25rem' : '0.5rem';
            navMobile.style.backdropFilter = 'blur(4px)';
            navMobile.style.padding = '0.25rem 0.75rem';
            navMobile.style.gap = '0.25rem';
            if(navLabel) navLabel.style.display = 'none'
            break;
            
          case 'deep':
            // 최소 상태 - 모바일용
            navMobile.style.transform = 'translateX(-50%) scale(0.6)';
            navMobile.style.top = scrollDirection === 'down' ? '0rem' : '0.25rem';
            navMobile.style.backdropFilter = 'blur(8px)';
            navMobile.style.padding = '0.125rem 0.5rem';
            navMobile.style.gap = '0.125rem';
            navMobile.style.backgroundColor = 'rgba(255,0,255,0.3)'
            if(navLabel) navLabel.style.transformStyle= 'none'
            break;
        }
        
        // 스크롤 방향에 따른 투명도 조절 (깊이 스크롤 시)
        if (currentScrollY > 600) {
          if (scrollDirection === 'down') {
            navMobile.style.opacity = '0.8';
          } else {
            navMobile.style.opacity = '1';
          }
        } else {
          navMobile.style.opacity = '1';
        }
      }
      
      lastScrollY = currentScrollY;
      ticking = false;
    }
    
    // 성능 최적화된 스크롤 핸들러
    scrollHandler = function() {
      if (!ticking) {
        requestAnimationFrame(updateNavOnScroll);
        ticking = true;
      }
    };
    
    // 이벤트 리스너 등록
    if (themeBtn) {
      themeBtn.addEventListener('click', toggleTheme);
    }
    
    if (themeBtnMobile) {
      themeBtnMobile.addEventListener('click', toggleTheme);
    }
    
    // 스크롤 이벤트 등록 (패시브 모드로 성능 최적화)
    window.addEventListener('scroll', scrollHandler, { passive: true });
    
    // 초기 상태 설정
    updateNavOnScroll();
    
    // 페이지 로드 시 초기 확장 상태 설정
    if (nav) {
      nav.style.opacity = '1';
      nav.style.transform = 'translateX(-50%) scale(1.05)';
      nav.style.top = '1rem';
      nav.style.backdropFilter = 'blur(2px)';
      nav.style.padding = '1rem 2rem';
      nav.style.gap = '1.5rem';
      nav.style.backgroundColor = 'rgba(255,255,255,0.0)';
    }
    
    // 모바일 네비게이션 초기 상태 설정
    if (navMobile) {
      navMobile.style.opacity = '1';
      navMobile.style.transform = 'translateX(-50%) scale(0.8)';
      navMobile.style.top = '0.5rem';
      navMobile.style.backdropFilter = 'blur(2px)';
      navMobile.style.padding = '0.5rem 1rem';
      navMobile.style.gap = '0.5rem';
      navMobile.style.backgroundColor = 'rgba(255,255,255,0.0)';
    }
  }

  // 페이지 로드 시와 페이지 전환 시 모두 실행
  document.addEventListener('DOMContentLoaded', initializeNavigation);
  document.addEventListener('astro:page-load', initializeNavigation);
</script>
