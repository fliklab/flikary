---
import ImageLoader from './ImageLoader';
import blurHashData from '../data/blurhash.json';
import { blurHashToGradient } from '../utils/blurhashToGradient';

export interface Props {
  src: string | { src: string; [key: string]: unknown };
  alt: string;
  slug?: string;
}

const { src, alt } = Astro.props;

// URL에서 slug 추출 (예: /blog/my-post/ -> my-post)
const urlPath = Astro.url.pathname;
const slugMatch = urlPath.match(/\/blog\/([^/]+)/);
const slug = slugMatch ? slugMatch[1] : undefined;

// src가 객체인지 문자열인지 확인하고 적절한 값 추출
const imageSrc = typeof src === "object" ? src.src : src;

// 이미지 경로 정규화
const normalizeImagePath = (path: string, slug: string): string => {
  // /@fs/absolute/path/src/content/blog/... -> blog/...
  const fsMatch = path.match(/\/@fs.*?\/src\/content\/(blog\/.+?)(\?|$)/);
  if (fsMatch) {
    return fsMatch[1];
  }

  // 일반적인 상대 경로 처리
  if (path.startsWith("./")) {
    const cleanSrc = path.replace(/^\.\//, "");
    return `blog/${slug}/${cleanSrc}`;
  }

  // 이미 blog/로 시작하는 경우
  if (path.startsWith("blog/")) {
    return path;
  }

  return path;
};

// BlurHash 데이터 처리
let gradientStyle = 'linear-gradient(135deg, #f5f5f5 0%, #eeeeee 100%)';
let aspectRatio = 'auto';

if (slug && imageSrc) {
  const imagePath = normalizeImagePath(imageSrc, slug);
  const imageData = (blurHashData as Record<string, { hash: string; width: number; height: number } | undefined>)[imagePath];
  
  if (imageData) {
    try {
      gradientStyle = blurHashToGradient(imageData.hash);
      aspectRatio = (imageData.width / imageData.height).toString();
    } catch (error) {
      console.error("BlurHash 디코딩 오류:", error);
    }
  }
}

// 고유한 이미지 ID 생성
const imageId = `img-${Math.random().toString(36).substr(2, 9)}`;
---

<div
  class="image-container"
  style={`aspect-ratio: ${aspectRatio}; border-radius: 1rem; overflow: hidden; position: relative;`}
>
  <!-- 그라데이션 placeholder (서버사이드 렌더링) -->
  <div
    class="gradient-placeholder"
    style={`background: ${gradientStyle}; position: absolute; top: 0; left: 0; width: 100%; height: 100%; transition: opacity 0.3s ease;`}
  ></div>

  <!-- 실제 이미지 -->
  <img
    id={imageId}
    src={imageSrc}
    alt={alt}
    loading="lazy"
    style="width: 100%; height: auto; margin: 0; padding: 0; border: 0; display: block;"
  />

  <!-- 이미지 로딩 로직만 클라이언트사이드에서 처리 -->
  <ImageLoader 
    client:only="react"
    imageId={imageId}
    imageSrc={imageSrc}
  />
</div> 