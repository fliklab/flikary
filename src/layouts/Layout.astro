---
import { LOCALE, SITE } from "@config";
import "@styles/base.css";
import { ViewTransitions } from "astro:transitions";
import fs from 'fs';
import path from 'path';
import GradientLight from "@components/GradientLight.astro";
import RetroTexture from "@components/RetroTexture.astro";

const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;
const googleAnalyticsId = import.meta.env.PUBLIC_GOOGLE_ANALYTICS_ID;

// .noindex 파일에서 제외할 경로 읽기
const getNoindexPaths = () => {
  try {
    const noindexFile = path.join(process.cwd(), '.noindex');
    if (fs.existsSync(noindexFile)) {
      const content = fs.readFileSync(noindexFile, 'utf-8');
      return content.split('\n').filter(line => line.trim() !== '');
    }
  } catch (error) {
    console.error('Error reading .noindex file:', error);
  }
  return [];
};

const noindexPaths = getNoindexPaths();
const currentPath = Astro.url.pathname;

// 현재 경로가 .noindex 파일에 포함되어 있는지 확인
const shouldNoindex = noindexPaths.some(noindexPath => 
  currentPath.includes(noindexPath)
);

export interface Props {
  title?: string;
  author?: string;
  profile?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
  pubDatetime?: Date;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
  jsonld?: string;
}

const {
  title = SITE.title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage,
  canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
  pubDatetime,
  modDatetime,
  scrollSmooth = false,
  jsonld,
} = Astro.props;

const socialImageURL = new URL(
  ogImage ?? SITE.ogImage ?? "og.png",
  Astro.url.origin
).href;

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${socialImageURL}`,
  datePublished: `${pubDatetime?.toISOString()}`,
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      url: `${profile}`,
    },
  ],
};
---

<!doctype html>
<html
  lang=`${LOCALE.lang ?? "ko"}`
  class={`${scrollSmooth && "scroll-smooth"}`}
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />
   
   {jsonld && (
      <script
        type="application/ld+json"
        set:html={JSON.stringify(jsonld)}
      />
    )}

    <!-- Google tag (gtag.js) -->
    <script is:inline define:vars={{ googleAnalyticsId }}>
      if (googleAnalyticsId) {
        try {
          const script = document.createElement('script');
          script.async = true;
          script.src = `https://www.googletagmanager.com/gtag/js?id=${googleAnalyticsId}`;
          
          script.onload = () => {
            console.log('Google Analytics loaded successfully');
          };
          script.onerror = () => {
            console.error('Failed to load Google Analytics');
          };
          
          document.head.appendChild(script);
          
          window.dataLayer = window.dataLayer || [];
          // eslint-disable-next-line prefer-rest-params
          function gtag(){dataLayer.push(arguments);}
          window.gtag = gtag;
          gtag('js', new Date());
          gtag('config', googleAnalyticsId);
        } catch (error) {
          console.error('Error initializing Google Analytics:', error);
        }
      }
    </script>
    
    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    {shouldNoindex && (
      <meta name="robots" content="noindex, nofollow" />
    )}

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />
    <meta property="og:type" content="website" />
    <meta property="og:locale" content="ko_KR" />

    <!-- Article Published/Modified time -->
    {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify(structuredData)}
    />

    <!-- Google Font -->
    <!-- <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Gowun+Dodum&family=IBM+Plex+Sans+KR:wght200;400;700&family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap"
      rel="stylesheet"
    /> -->

    <meta name="theme-color" content="" />

    {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      googleSiteVerification && (
        <meta
          name="google-site-verification"
          content={googleSiteVerification}
        />
      )
    }

    <ViewTransitions />

    <script is:inline src="/toggle-theme.js" async></script>
  </head>
  <body>
    <GradientLight />
    <RetroTexture />
    <slot />
  </body>
</html>
