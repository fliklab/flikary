---
import Footer from "@components/Footer.astro";
import { SITE } from "@config";
import Layout from "./Layout.astro";
import MarkdownText from "@components/MarkdownText.astro";

export interface Props {
  frontmatter: {
    title?: string;
    name?: string;
    nickname?: string;
    email: string;
    region: string;
    phone?: string;
    github?: string;
    website?: string;
    description?: string;
    subtitle?: string;
    summary?: string;
    skills?: Array<{
      name: string;
      tag: string[];
    }>;
    education?: Array<{
      degree: string;
      school: string;
      location: string;
      startDate: string;
      endDate: string;
      major: string;
      description: string;
    }>;
    works?: Array<{
      company: string;
      position: string;
      location?: string;
      startDate: string;
      endDate: string;
      duration: string;
      website?: string;
      techStack: string[];
      description: string | string[];
      details?: string[];
      projects?: Array<{
        name: string;
        period: string;
        tag?: string[];
        techStack: string[];
        description: string | string[];
        details?: string[];
        teamComposition?: string;
        website?: string;
        github?: string;
        additionalLink?: {
          url: string;
          text: string;
        };
      }>;
    }>;
    awards?: Array<{
      title: string;
      organization: string;
      date: string;
      description: string;
      link?: string;
    }>;
    projects?: Array<{
      name: string;
      period: string;
      techStack: string[];
      description: string | string[];
      performance?: string;
      details?: string[];
      teamComposition?: string;
      website?: string;
      github?: string;
      additionalLinks?: Array<{
        url: string;
        text: string;
      }>;
    }>;
    // works?: Array<{
    //   period: string;
    //   duration?: string;
    //   company: string;
    //   position: string;
    //   website?: string;
    //   techStack: string[];
    //   description: string;
    //   details?: string[];
    //   projects?: Array<{
    //     name: string;
    //     period: string;
    //     description: string;
    //     details?: string[];
    //   }>;
    // }>;
  };
}

const { frontmatter } = Astro.props;
---

<!-- Hotjar Tracking Code for Flikary Resume -->
<script>
  (function (h, o, t, j, a, r) {
    h.hj =
      h.hj ||
      function (...args) {
        (h.hj.q = h.hj.q || []).push(args);
      };
    h._hjSettings = { hjid: 6398923, hjsv: 6 };
    a = o.getElementsByTagName("head")[0];
    r = o.createElement("script");
    r.async = 1;
    r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
    a.appendChild(r);
  })(window, document, "https://static.hotjar.com/c/hotjar-", ".js?sv=");
</script>
<Layout title={`${frontmatter.title} | ${SITE.title}`}>
  <!-- <Header activeNav="resume" />
  <Breadcrumbs /> -->
  <div class="nav-container" style={{ width: "100%" }}>
    <div class="top-nav-wrap">
      <style>
        .nav-container {
          @apply mx-auto flex max-w-3xl flex-col items-center justify-between sm:flex-row;
        }
        .top-nav-wrap {
          @apply relative flex w-full items-start justify-between p-4 sm:items-center sm:py-8;
        }
        .home-button {
          @apply flex gap-2 rounded-lg px-4 py-2 text-gray-700 transition-colors hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300;
        }
      </style>
      <div class="flex justify-between" style={{ width: "100%" }}>
        <a href="/" class="home-button">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M19 12H5M12 19l-7-7 7-7"></path>
          </svg>
        </a>
        <div class="flex gap-2">
          <a href="/self-introduction" class="home-button"> ÏûêÍ∏∞ÏÜåÍ∞úÏÑú </a>
          <a href="/resume" class="home-button"> Ïù¥Î†•ÏÑú </a>
          {
            SITE.lightAndDarkMode && (
              <button
                id="theme-btn"
                class="focus-outline"
                title="Toggles light & dark"
                aria-label="auto"
                aria-live="polite"
              >
                <svg xmlns="http://www.w3.org/2000/svg" id="moon-svg">
                  <path d="M20.742 13.045a8.088 8.088 0 0 1-2.077.271c-2.135 0-4.14-.83-5.646-2.336a8.025 8.025 0 0 1-2.064-7.723A1 1 0 0 0 9.73 2.034a10.014 10.014 0 0 0-4.489 2.582c-3.898 3.898-3.898 10.243 0 14.143a9.937 9.937 0 0 0 7.072 2.93 9.93 9.93 0 0 0 7.07-2.929 10.007 10.007 0 0 0 2.583-4.491 1.001 1.001 0 0 0-1.224-1.224zm-2.772 4.301a7.947 7.947 0 0 1-5.656 2.343 7.953 7.953 0 0 1-5.658-2.344c-3.118-3.119-3.118-8.195 0-11.314a7.923 7.923 0 0 1 2.06-1.483 10.027 10.027 0 0 0 2.89 7.848 9.972 9.972 0 0 0 7.848 2.891 8.036 8.036 0 0 1-1.484 2.059z" />
                </svg>
                <svg xmlns="http://www.w3.org/2000/svg" id="sun-svg">
                  <path d="M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2h-3zm17 0h3v2h-3zM4.219 18.363l2.12-2.122 1.415 1.414-2.12 2.122zM16.24 6.344l2.122-2.122 1.414 1.414-2.122 2.122zM6.342 7.759 4.22 5.637l1.415-1.414 2.12 2.122zm13.434 10.605-1.414 1.414-2.122-2.122 1.414-1.414z" />
                </svg>
              </button>
            )
          }
        </div>
      </div>
    </div>
  </div>

  <main id="main-content" class="mx-auto max-w-3xl px-4 py-12">
    <section id="resume" class="w-full">
      {/* Ìó§Îçî ÏÑπÏÖò */}
      <div class="mb-8 border-b pb-6">
        <h1 class="mb-2 text-4xl font-bold">
          {
            import.meta.env.VITE_NAME
              ? `${import.meta.env.VITE_NAME}(${frontmatter.nickname})`
              : frontmatter.title
          }
        </h1>
        <p class="mb-4 text-xl text-gray-600 dark:text-gray-400">
          {frontmatter.subtitle}
        </p>

        {/* Ïó∞ÎùΩÏ≤ò Ï†ïÎ≥¥ */}
        <div
          class="text-m flex flex-wrap gap-4 text-gray-600 dark:text-gray-400"
        >
          {frontmatter.region && <span>{frontmatter.region}</span>}
          {
            import.meta.env.VITE_EMAIL && (
              <span>{import.meta.env.VITE_EMAIL}</span>
            )
          }
          {
            import.meta.env.VITE_PHONE && (
              <span>{import.meta.env.VITE_PHONE}</span>
            )
          }
          {
            frontmatter.website && (
              <a
                href={frontmatter.website}
                target="_blank"
                rel="noopener noreferrer"
                class="hover:text-blue-600 hover:underline dark:hover:text-blue-400"
              >
                {frontmatter.website.replace(/^https?:\/\//, "")}
              </a>
            )
          }
          {
            frontmatter.github && (
              <a
                href={`https://github.com/${frontmatter.github}`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center gap-1 hover:text-blue-600 hover:underline dark:hover:text-blue-400"
              >
                <svg
                  height="16"
                  width="16"
                  viewBox="0 0 16 16"
                  fill="currentColor"
                >
                  <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z" />
                </svg>
                {frontmatter.github}
              </a>
            )
          }
        </div>
      </div>

      {/* Summary ÏÑπÏÖò */}
      {
        frontmatter.summary && (
          <div class="prose mx-auto mb-16 mt-8 max-w-3xl">
            <slot />
          </div>
        )
      }

      {/* Skills ÏÑπÏÖò */}
      {
        frontmatter.skills && (
          <div class="mb-16">
            <h2 class="mb-4 border-b pb-2 text-2xl font-bold">üõ†Ô∏è Tech Stack</h2>
            {frontmatter.skills.map(skill => (
              <div class="mb-4">
                {skill.name && (
                  <h3 class="mt-0 text-xl font-medium">{skill.name}</h3>
                )}
                <p class="text-m text-gray-600 dark:text-gray-400">
                  {skill.tag.join(", ")}
                </p>
              </div>
            ))}
          </div>
        )
      }

      {/* ÏóÖÎ¨¥Í≤ΩÌóò ÏÑπÏÖò */}
      {
        frontmatter.works && (
          <div class="mb-16">
            <h2 class="mb-4 border-b pb-2 text-2xl font-bold">
              üíº Work Experience
            </h2>
            {frontmatter.works.map((exp, index) => (
              <div class="mb-4">
                <div class="flex flex-col items-start justify-between sm:flex-row">
                  <h3 class="mb-1 text-xl font-bold">{exp.company}</h3>
                  <div class="text-m text-gray-600 dark:text-gray-400">
                    {exp.startDate} ~ {exp.endDate}
                    {exp.duration && <span>({exp.duration})</span>}
                  </div>
                </div>
                <div class="flex flex-col items-start justify-between sm:flex-row">
                  <p class="mb-2 text-gray-700 dark:text-gray-300">
                    {exp.position}
                  </p>
                  {exp.website && (
                    <a
                      href={exp.website}
                      class="text-m block text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400"
                    >
                      {exp.website}
                    </a>
                  )}
                </div>

                {/* Í∏∞Ïà† Ïä§ÌÉù ÌÉúÍ∑∏ */}
                {exp.techStack && (
                  <div class="mb-3 flex flex-wrap gap-1">
                    {exp.techStack.map(tech => (
                      <span class="rounded-2xl bg-gray-200 px-2 py-0.5 text-2sm text-gray-700 dark:bg-gray-600 dark:text-gray-300">
                        {tech}
                      </span>
                    ))}
                  </div>
                )}

                {/* Ï£ºÏöî ÏóÖÎ¨¥ ÏÑ§Î™Ö */}
                <div>
                  {exp.description && (
                    <MarkdownText content={exp.description} fontSize="m" />
                  )}

                  {exp.details && (
                    <MarkdownText content={exp.details} fontSize="sm" />
                  )}
                </div>
                {/* ÌïòÏúÑ ÌîÑÎ°úÏ†ùÌä∏ */}
                {exp.projects && (
                  <h3 class="text-m mb-2 font-bold">Projects</h3>
                )}
                {exp.projects &&
                  exp.projects.map(project => (
                    <div class="mb-4 ml-8">
                      <div class="flex items-start justify-between">
                        <h4 class="font-medium">{project.name}</h4>
                        <span class="text-sm text-gray-600 dark:text-gray-400">
                          {project.period}
                        </span>
                      </div>
                      {typeof project.tag?.length === "number" ? (
                        <p class="mt-1 rounded-md py-1 text-sm text-gray-700 dark:bg-gray-600 dark:text-gray-300">
                          {project.tag.join("‚Ä¢")}
                        </p>
                      ) : null}
                      <MarkdownText
                        content={project.description}
                        fontSize="sm"
                      />
                      {project.details && (
                        <MarkdownText content={project.details} fontSize="sm" />
                      )}
                      {project.teamComposition && (
                        <p class="text-m mb-2 text-gray-600 dark:text-gray-400">
                          {project.teamComposition}
                        </p>
                      )}
                      <div class="flex flex-wrap gap-3">
                        {project.website && (
                          <ul class="list-disc space-y-1 pl-5">
                            <li>
                              <a
                                href={project.website}
                                class="text-blue-600 hover:underline dark:text-blue-400"
                                target="_blank"
                              >
                                {project.website.replace(/^https?:\/\//, "")}
                              </a>
                            </li>
                          </ul>
                        )}
                        {project.github && (
                          <a
                            href={project.github}
                            class="text-blue-600 hover:underline dark:text-blue-400"
                            target="_blank"
                          >
                            GitHub
                          </a>
                        )}
                        {project.additionalLink && (
                          <a
                            href={project.additionalLink.url}
                            class="text-blue-600 hover:underline dark:text-blue-400"
                            target="_blank"
                          >
                            {project.additionalLink.text}
                          </a>
                        )}
                      </div>
                    </div>
                  ))}
                {frontmatter.works &&
                  index !== frontmatter.works.length - 1 && (
                    <div class="mt-4 border-b" />
                  )}
              </div>
            ))}
          </div>
        )
      }

      {/* Projects ÏÑπÏÖò */}
      {
        frontmatter.projects && (
          <div class="mb-16">
            <h2 class="mb-4 border-b pb-2 text-2xl font-bold">üöÄ Projects</h2>
            {frontmatter.projects.map((project, index) => (
              <div class="mb-4">
                <div class="flex flex-col items-start justify-between sm:flex-row">
                  <h3 class="mb-1 text-xl font-bold">{project.name}</h3>
                  <div class="text-m mb-2 flex flex-row gap-1 sm:-mb-4 sm:flex-col sm:items-end">
                    <span class="text-m text-gray-600 dark:text-gray-400">
                      {project.period}
                    </span>
                    {project.teamComposition && (
                      <>
                        <span class="text-m text-gray-600 sm:hidden dark:text-gray-400">
                          ‚Ä¢
                        </span>
                        <span class="text-m text-gray-600 dark:text-gray-400">
                          {project.teamComposition}
                        </span>
                      </>
                    )}
                  </div>
                </div>

                {/* Í∏∞Ïà† Ïä§ÌÉù ÌÉúÍ∑∏ */}
                {project.techStack && (
                  <div class="mb-3 flex flex-wrap gap-1">
                    {project.techStack.map(tech => (
                      <span class="rounded-2xl bg-gray-200 px-2 py-0.5 text-2sm text-gray-700 dark:bg-gray-600 dark:text-gray-300">
                        {tech}
                      </span>
                    ))}
                  </div>
                )}

                {project.description && (
                  <MarkdownText content={project.description} fontSize="m" />
                )}

                {project.performance && (
                  <MarkdownText
                    classOverride="mt-2 text-m text-gray-600 dark:text-gray-400 mb-2"
                    content={project.performance}
                    fontSize="m"
                  />
                )}

                {project.details && (
                  <MarkdownText content={project.details} fontSize="m" />
                )}

                <div class="flex flex-wrap gap-3">
                  {project.website && (
                    <a
                      href={project.website}
                      class="text-blue-600 hover:underline dark:text-blue-400"
                      target="_blank"
                    >
                      Website
                    </a>
                  )}
                  {project.github && (
                    <a
                      href={project.github}
                      class="text-blue-600 hover:underline dark:text-blue-400"
                      target="_blank"
                    >
                      GitHub
                    </a>
                  )}
                  {project.additionalLinks && (
                    <ul class="list-disc space-y-1 pl-5">
                      {project.additionalLinks.map(link => (
                        <li>
                          <a
                            href={link.url}
                            class="text-blue-600 hover:underline dark:text-blue-400"
                            target="_blank"
                          >
                            {link.text}
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </div>
                {frontmatter.projects &&
                  index !== frontmatter.projects.length - 1 && (
                    <div class="mt-4 border-b" />
                  )}
              </div>
            ))}
          </div>
        )
      }

      {/* Education ÏÑπÏÖò */}
      {
        frontmatter.education && (
          <div class="mb-16">
            <h2 class="mb-4 border-b pb-2 text-2xl font-bold">üéì Education</h2>
            {frontmatter.education.map(edu => (
              <div class="mb-4">
                <div class="flex flex-col items-start justify-between sm:flex-row">
                  <h3 class="mt-0 text-xl font-medium">
                    {edu.school}({edu.location})
                  </h3>
                  <div class="flex flex-col items-end gap-1">
                    <p class="text-m text-gray-600 dark:text-gray-400">
                      {edu.startDate} ~ {edu.endDate}
                    </p>
                    <p class="hidden text-gray-600 sm:block dark:text-gray-400">
                      {edu.degree}
                    </p>
                  </div>
                </div>
                <div class="mt-0 flex flex-col sm:-mt-4 sm:flex-row">
                  <p class="text-gray-600 sm:hidden dark:text-gray-400">
                    {edu.degree}{" "}
                  </p>
                  <p class="text-gray-600 dark:text-gray-400">{edu.major}</p>
                </div>
                <p class="mt-2 text-gray-600 dark:text-gray-600">
                  {edu.description}
                </p>
              </div>
            ))}
          </div>
        )
      }

      {/* Awards ÏÑπÏÖò */}
      {
        frontmatter.awards && (
          <div class="mb-8">
            <h2 class="mb-4 border-b pb-2 text-2xl font-bold">üèÜ Awards</h2>
            {frontmatter.awards.map(award => (
              <div class="mb-4 border-b pb-4">
                <div class="flex flex-col items-start justify-between sm:flex-row">
                  <h3 class="mt-0 text-xl font-medium">{award.title}</h3>
                  <span class="text-m text-gray-600 dark:text-gray-400">
                    {award.date}
                  </span>
                </div>
                <p class="text-m text-gray-600 dark:text-gray-400">
                  {award.organization}
                </p>
                {award.description && (
                  <p class="text-m mt-1 text-gray-700 dark:text-gray-300">
                    {award.description}
                  </p>
                )}
                {award.link && (
                  <p class="text-m mt-1 text-gray-700 dark:text-gray-300">
                    ÎßÅÌÅ¨:{" "}
                    <a
                      href={award.link}
                      class="text-blue-600 hover:underline dark:text-blue-400"
                      target="_blank"
                    >
                      {award.link}
                    </a>
                  </p>
                )}
              </div>
            ))}
          </div>
        )
      }
    </section>
  </main>
  <Footer />
</Layout>
